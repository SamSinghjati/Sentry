---
# Source: sentry/templates/sentry/worker/deployment-sentry-worker.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sentry-worker
  labels:
    app: sentry
    chart: "sentry-27.2.4"
    release: "sentry"
    heritage: "Helm"
    app.kubernetes.io/name: sentry
    app.kubernetes.io/instance: sentry
    app.kubernetes.io/component: worker
    app.kubernetes.io/version: "25.8.0"
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: sentry
      release: "sentry"
      role: worker
  replicas: 1
  template:
    metadata:
      annotations:
        checksum/configYml: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
        checksum/sentryConfPy: d5f85a6a8afbc55eebe23801e1a51a0fb4c0428c9a73ef6708d8dc83e079cd49
        checksum/config.yaml: d9fcc8cdfde6c9d735db76a4aabe20d7cc6a0fe5ea1dfa7cec6342cbf6c02a7b
      labels:
        app: sentry
        release: "sentry"
        role: worker
        app.kubernetes.io/name: sentry
        app.kubernetes.io/instance: sentry
        app.kubernetes.io/component: worker
        app.kubernetes.io/version: "25.8.0"
    spec:
      affinity:
      containers:
        - name: sentry-worker
          image: "ghcr.io/getsentry/sentry:25.8.0"
          imagePullPolicy: IfNotPresent
          command: ["sentry"]
          args:
            - "run"
            - "worker"
          env:
            - name: C_FORCE_ROOT
              value: "true"
            - name: SNUBA
              value: http://sentry-snuba:1218
            - name: VROOM
              value: http://sentry-vroom:8085
            - name: SENTRY_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: sentry-sentry-secret
                  key: "key"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sentry-sentry-postgresql
                  key: postgres-password
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_NAME
              value: "sentry"
            - name: POSTGRES_HOST
              value: "sentry-sentry-postgresql"
            - name: POSTGRES_PORT
              value: "5432"
          volumeMounts:
            - mountPath: /etc/sentry
              name: config
              readOnly: true
            - mountPath: /var/lib/sentry/files
              name: sentry-data
          livenessProbe:
            periodSeconds: 60
            initialDelaySeconds: 10
            timeoutSeconds: 10
            failureThreshold: 3
            exec:
              command:
                - sentry
                - exec
                - -c
                - 'from sentry.celery import app; import os; dest="celery@{}".format(os.environ["HOSTNAME"]); print(app.control.ping(destination=[dest], timeout=5)[0][dest]["ok"])'
          resources: {}
      volumes:
        - name: config
          configMap:
            name: sentry-sentry
        - name: sentry-data
          emptyDir: {}
