---
# Source: sentry/charts/kafka/templates/provisioning/job.yaml
kind: Job
apiVersion: batch/v1
metadata:
  name: sentry-kafka-provisioning
  namespace: "sentry"
  labels:
    app.kubernetes.io/instance: sentry
    app.kubernetes.io/name: kafka
    app.kubernetes.io/version: 3.7.1
    app.kubernetes.io/component: kafka-provisioning
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: sentry
        app.kubernetes.io/name: kafka
        app.kubernetes.io/version: 3.7.1
        app.kubernetes.io/component: kafka-provisioning
    spec:
      serviceAccountName: sentry-kafka-provisioning
      automountServiceAccountToken: false
      enableServiceLinks: true
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
        seccompProfile:
          type: RuntimeDefault
        supplementalGroups: []
        sysctls: []
      restartPolicy: OnFailure
      terminationGracePeriodSeconds: 0
      initContainers:
        - name: wait-for-available-kafka
          image: docker.io/bitnamilegacy/kafka:3.7.1-debian-12-r4
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
          command:
            - /bin/bash
          args:
            - -ec
            - |
              wait-for-port \
                --host=sentry-kafka \
                --state=inuse \
                --timeout=120 \
                9092;
              echo "Kafka is available";
          resources:
            limits:
              cpu: 375m
              ephemeral-storage: 2Gi
              memory: 384Mi
            requests:
              cpu: 250m
              ephemeral-storage: 50Mi
              memory: 256Mi
      containers:
        - name: kafka-provisioning
          image: docker.io/bitnamilegacy/kafka:3.7.1-debian-12-r4
          imagePullPolicy: "IfNotPresent"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
          command:
            - /bin/bash
          args:
            - -efc
            - |
              echo "Configuring environment"
              . /opt/bitnami/scripts/libkafka.sh
              export CLIENT_CONF="${CLIENT_CONF:-/tmp/client.properties}"
              if [ ! -f "$CLIENT_CONF" ]; then
                touch $CLIENT_CONF

                kafka_common_conf_set "$CLIENT_CONF" security.protocol "PLAINTEXT"
              fi

              echo "Running pre-provisioning script if any given"



              kafka_provisioning_commands=(
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --config message.timestamp.type=LogAppendTime \
                    --command-config ${CLIENT_CONF} \
                    --topic events"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic event-replacements"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --config cleanup.policy=compact,delete \
                    --config min.compaction.lag.ms=3600000 \
                    --command-config ${CLIENT_CONF} \
                    --topic snuba-commit-log"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic cdc"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --config message.timestamp.type=LogAppendTime \
                    --command-config ${CLIENT_CONF} \
                    --topic transactions"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --config cleanup.policy=compact,delete \
                    --config min.compaction.lag.ms=3600000 \
                    --command-config ${CLIENT_CONF} \
                    --topic snuba-transactions-commit-log"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --config message.timestamp.type=LogAppendTime \
                    --command-config ${CLIENT_CONF} \
                    --topic snuba-metrics"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic outcomes"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic outcomes-dlq"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic outcomes-billing"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic outcomes-billing-dlq"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic ingest-sessions"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --config cleanup.policy=compact,delete \
                    --config min.compaction.lag.ms=3600000 \
                    --command-config ${CLIENT_CONF} \
                    --topic snuba-metrics-commit-log"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic scheduled-subscriptions-events"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic scheduled-subscriptions-transactions"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic scheduled-subscriptions-metrics"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic scheduled-subscriptions-generic-metrics-sets"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic scheduled-subscriptions-generic-metrics-distributions"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic scheduled-subscriptions-generic-metrics-counters"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic scheduled-subscriptions-generic-metrics-gauges"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic events-subscription-results"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic transactions-subscription-results"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic metrics-subscription-results"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic generic-metrics-subscription-results"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --config message.timestamp.type=LogAppendTime \
                    --command-config ${CLIENT_CONF} \
                    --topic snuba-queries"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --config message.timestamp.type=LogAppendTime \
                    --command-config ${CLIENT_CONF} \
                    --topic processed-profiles"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic profiles-call-tree"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic snuba-profile-chunks"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --config max.message.bytes=15000000 \
                    --config message.timestamp.type=LogAppendTime \
                    --command-config ${CLIENT_CONF} \
                    --topic ingest-replay-events"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --config message.timestamp.type=LogAppendTime \
                    --command-config ${CLIENT_CONF} \
                    --topic snuba-generic-metrics"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --config cleanup.policy=compact,delete \
                    --config min.compaction.lag.ms=3600000 \
                    --command-config ${CLIENT_CONF} \
                    --topic snuba-generic-metrics-sets-commit-log"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --config cleanup.policy=compact,delete \
                    --config min.compaction.lag.ms=3600000 \
                    --command-config ${CLIENT_CONF} \
                    --topic snuba-generic-metrics-distributions-commit-log"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --config cleanup.policy=compact,delete \
                    --config min.compaction.lag.ms=3600000 \
                    --command-config ${CLIENT_CONF} \
                    --topic snuba-generic-metrics-counters-commit-log"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --config cleanup.policy=compact,delete \
                    --config min.compaction.lag.ms=3600000 \
                    --command-config ${CLIENT_CONF} \
                    --topic snuba-generic-metrics-gauges-commit-log"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --config message.timestamp.type=LogAppendTime \
                    --command-config ${CLIENT_CONF} \
                    --topic generic-events"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --config cleanup.policy=compact,delete \
                    --config min.compaction.lag.ms=3600000 \
                    --command-config ${CLIENT_CONF} \
                    --topic snuba-generic-events-commit-log"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --config message.timestamp.type=LogAppendTime \
                    --command-config ${CLIENT_CONF} \
                    --topic group-attributes"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic snuba-dead-letter-metrics"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic snuba-dead-letter-generic-metrics"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic snuba-dead-letter-replays"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic snuba-dead-letter-generic-events"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic snuba-dead-letter-querylog"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic snuba-dead-letter-group-attributes"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic ingest-attachments"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic ingest-attachments-dlq"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic ingest-transactions"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic ingest-transactions-dlq"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic ingest-transactions-backlog"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic ingest-events-dlq"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic ingest-events"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic ingest-replay-recordings"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic ingest-metrics"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic ingest-metrics-dlq"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic ingest-performance-metrics"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic ingest-feedback-events"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic ingest-feedback-events-dlq"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic ingest-monitors"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic monitors-clock-tasks"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic monitors-clock-tick"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic monitors-incident-occurrences"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic profiles"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic ingest-occurrences"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic snuba-spans"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic snuba-eap-spans-commit-log"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic scheduled-subscriptions-eap-spans"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic eap-spans-subscription-results"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic snuba-eap-mutations"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic snuba-lw-deletions-generic-events"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic shared-resources-usage"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic snuba-profile-chunks"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic buffered-segments"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic buffered-segments-dlq"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic uptime-configs"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic uptime-results"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic snuba-uptime-results"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic task-worker"
                "/opt/bitnami/kafka/bin/kafka-topics.sh \
                    --create \
                    --if-not-exists \
                    --bootstrap-server ${KAFKA_SERVICE} \
                    --replication-factor 3 \
                    --partitions 1 \
                    --command-config ${CLIENT_CONF} \
                    --topic snuba-ourlogs"
              )

              echo "Starting provisioning"
              for ((index=0; index < ${#kafka_provisioning_commands[@]}; index+=1))
              do
                for j in $(seq ${index} $((${index}+1-1)))
                do
                    ${kafka_provisioning_commands[j]} & # Async command
                done
                wait  # Wait the end of the jobs
              done

              echo "Running post-provisioning script if any given"



              echo "Provisioning succeeded"
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: KAFKA_SERVICE
              value: sentry-kafka:9092
          resources:
            limits:
              cpu: 375m
              ephemeral-storage: 2Gi
              memory: 384Mi
            requests:
              cpu: 250m
              ephemeral-storage: 50Mi
              memory: 256Mi
          volumeMounts:
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: tmp
          emptyDir: {}
